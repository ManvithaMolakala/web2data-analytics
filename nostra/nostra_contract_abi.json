{
    "contract_abi":
    [
        {
            "name": "NostraInterestTokenImpl",
            "type": "impl",
            "interface_name": "nostra::lending::interface::nostra_interest_token::INostraInterestToken"
          },
          {
            "name": "core::integer::u256",
            "type": "struct",
            "members": [
              {
                "name": "low",
                "type": "core::integer::u128"
              },
              {
                "name": "high",
                "type": "core::integer::u128"
              }
            ]
          },
          {
            "name": "core::bool",
            "type": "enum",
            "variants": [
              {
                "name": "False",
                "type": "()"
              },
              {
                "name": "True",
                "type": "()"
              }
            ]
          },
          {
            "name": "nostra::lending::interface::nostra_interest_token::INostraInterestToken",
            "type": "interface",
            "items": [
              {
                "name": "mint_fees",
                "type": "function",
                "inputs": [
                  {
                    "name": "recipient",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "mint",
                "type": "function",
                "inputs": [
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "deposit",
                "type": "function",
                "inputs": [
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "burn",
                "type": "function",
                "inputs": [
                  {
                    "name": "from",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "withdraw",
                "type": "function",
                "inputs": [
                  {
                    "name": "from",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "approve",
                "type": "function",
                "inputs": [
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "allowance",
                "type": "function",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "debt_token",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "interest_rate_model",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraInterestTokenCamelOnlyImpl",
            "type": "impl",
            "interface_name": "nostra::lending::interface::nostra_interest_token::INostraInterestTokenCamelOnly"
          },
          {
            "name": "nostra::lending::interface::nostra_interest_token::INostraInterestTokenCamelOnly",
            "type": "interface",
            "items": [
              {
                "name": "mintFees",
                "type": "function",
                "inputs": [
                  {
                    "name": "recipient",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "debtToken",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "interestRateModel",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenIndexImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenIndex"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenIndex",
            "type": "interface",
            "items": [
              {
                "name": "token_index",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenIndexCamelImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenIndexCamel"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenIndexCamel",
            "type": "interface",
            "items": [
              {
                "name": "tokenIndex",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "UpgradeableImpl",
            "type": "impl",
            "interface_name": "openzeppelin::upgrades::interface::IUpgradeable"
          },
          {
            "name": "openzeppelin::upgrades::interface::IUpgradeable",
            "type": "interface",
            "items": [
              {
                "name": "upgrade",
                "type": "function",
                "inputs": [
                  {
                    "name": "new_class_hash",
                    "type": "core::starknet::class_hash::ClassHash"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              }
            ]
          },
          {
            "name": "OwnableTwoStepImpl",
            "type": "impl",
            "interface_name": "openzeppelin::access::ownable::interface::IOwnableTwoStep"
          },
          {
            "name": "openzeppelin::access::ownable::interface::IOwnableTwoStep",
            "type": "interface",
            "items": [
              {
                "name": "owner",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "pending_owner",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "accept_ownership",
                "type": "function",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "transfer_ownership",
                "type": "function",
                "inputs": [
                  {
                    "name": "new_owner",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "renounce_ownership",
                "type": "function",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
              }
            ]
          },
          {
            "name": "TwoStepOwnableMigrationImpl",
            "type": "impl",
            "interface_name": "nostra::shared::ownable_migration::ITwoStepOwnableMigration"
          },
          {
            "name": "nostra::shared::ownable_migration::ITwoStepOwnableMigration",
            "type": "interface",
            "items": [
              {
                "name": "migrate_ownership",
                "type": "function",
                "inputs": [],
                "outputs": [],
                "state_mutability": "external"
              }
            ]
          },
          {
            "name": "NostraTokenImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBase"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBase",
            "type": "interface",
            "items": [
              {
                "name": "unchecked_transfer_from",
                "type": "function",
                "inputs": [
                  {
                    "name": "from",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "approve_all",
                "type": "function",
                "inputs": [
                  {
                    "name": "caller_sub_account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "approve_from_sub_account",
                "type": "function",
                "inputs": [
                  {
                    "name": "caller_sub_account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "set_total_supply_cap",
                "type": "function",
                "inputs": [
                  {
                    "name": "new_total_supply_cap",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "set_is_burnable",
                "type": "function",
                "inputs": [
                  {
                    "name": "is_burnable",
                    "type": "core::bool"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "set_whitelisted",
                "type": "function",
                "inputs": [
                  {
                    "name": "address",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "is_whitelisted",
                    "type": "core::bool"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "cdp_manager",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "underlying_asset",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "total_supply_cap",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "is_burnable",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenCamelImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBaseCamel"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBaseCamel",
            "type": "interface",
            "items": [
              {
                "name": "uncheckedTransferFrom",
                "type": "function",
                "inputs": [
                  {
                    "name": "from",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "approveAll",
                "type": "function",
                "inputs": [
                  {
                    "name": "callerSubAccount",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "approveFromSubAccount",
                "type": "function",
                "inputs": [
                  {
                    "name": "callerSubAccount",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "cdpManager",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "underlyingAsset",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "totalSupplyCap",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "isBurnable",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenBalanceImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBalance"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBalance",
            "type": "interface",
            "items": [
              {
                "name": "total_supply",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "balance_of",
                "type": "function",
                "inputs": [
                  {
                    "name": "account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenBalanceCamelImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBalanceCamel"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenBalanceCamel",
            "type": "interface",
            "items": [
              {
                "name": "totalSupply",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "balanceOf",
                "type": "function",
                "inputs": [
                  {
                    "name": "account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "NostraTokenSubAccountAllowanceImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenSubAccountAllowance"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenSubAccountAllowance",
            "type": "interface",
            "items": [
              {
                "name": "increase_allowance_from_sub_account",
                "type": "function",
                "inputs": [
                  {
                    "name": "caller_sub_account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "added_value",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "decrease_allowance_from_sub_account",
                "type": "function",
                "inputs": [
                  {
                    "name": "caller_sub_account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "subtracted_value",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              }
            ]
          },
          {
            "name": "NostraTokenSubAccountAllowanceCamelImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::nostra_token::INostraTokenSubAccountAllowanceCamel"
          },
          {
            "name": "nostra::core::tokenization::interface::nostra_token::INostraTokenSubAccountAllowanceCamel",
            "type": "interface",
            "items": [
              {
                "name": "increaseAllowanceFromSubAccount",
                "type": "function",
                "inputs": [
                  {
                    "name": "callerSubAccount",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "addedValue",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "decreaseAllowanceFromSubAccount",
                "type": "function",
                "inputs": [
                  {
                    "name": "callerSubAccount",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "spender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "subtractedValue",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              }
            ]
          },
          {
            "name": "AssetTokenImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::asset_token::IAssetTokenBase"
          },
          {
            "name": "nostra::core::tokenization::interface::asset_token::IAssetTokenBase",
            "type": "interface",
            "items": [
              {
                "name": "transfer",
                "type": "function",
                "inputs": [
                  {
                    "name": "to",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "transfer_from",
                "type": "function",
                "inputs": [
                  {
                    "name": "sender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "recipient",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "set_limit_controller",
                "type": "function",
                "inputs": [
                  {
                    "name": "limit_controller",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "is_collateral",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "limit_controller",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "AssetTokenCamelOnlyImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::asset_token::IAssetTokenBaseCamelOnly"
          },
          {
            "name": "nostra::core::tokenization::interface::asset_token::IAssetTokenBaseCamelOnly",
            "type": "interface",
            "items": [
              {
                "name": "transferFrom",
                "type": "function",
                "inputs": [
                  {
                    "name": "sender",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "recipient",
                    "type": "core::starknet::contract_address::ContractAddress"
                  },
                  {
                    "name": "amount",
                    "type": "core::integer::u256"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "external"
              },
              {
                "name": "setLimitController",
                "type": "function",
                "inputs": [
                  {
                    "name": "limitController",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [],
                "state_mutability": "external"
              },
              {
                "name": "isCollateral",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::bool"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "limitController",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "ScaledTokenImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::scaled_token::IScaledToken"
          },
          {
            "name": "nostra::core::tokenization::interface::scaled_token::IScaledToken",
            "type": "interface",
            "items": [
              {
                "name": "scaled_total_supply",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "scaled_balance_of",
                "type": "function",
                "inputs": [
                  {
                    "name": "account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "ScaledTokenCamelImpl",
            "type": "impl",
            "interface_name": "nostra::core::tokenization::interface::scaled_token::IScaledTokenCamel"
          },
          {
            "name": "nostra::core::tokenization::interface::scaled_token::IScaledTokenCamel",
            "type": "interface",
            "items": [
              {
                "name": "scaledTotalSupply",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "scaledBalanceOf",
                "type": "function",
                "inputs": [
                  {
                    "name": "account",
                    "type": "core::starknet::contract_address::ContractAddress"
                  }
                ],
                "outputs": [
                  {
                    "type": "core::integer::u256"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "TokenMetadataImpl",
            "type": "impl",
            "interface_name": "openzeppelin::token::erc20::interface::IERC20Metadata"
          },
          {
            "name": "core::byte_array::ByteArray",
            "type": "struct",
            "members": [
              {
                "name": "data",
                "type": "core::array::Array::<core::bytes_31::bytes31>"
              },
              {
                "name": "pending_word",
                "type": "core::felt252"
              },
              {
                "name": "pending_word_len",
                "type": "core::integer::u32"
              }
            ]
          },
          {
            "name": "openzeppelin::token::erc20::interface::IERC20Metadata",
            "type": "interface",
            "items": [
              {
                "name": "name",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::byte_array::ByteArray"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "symbol",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::byte_array::ByteArray"
                  }
                ],
                "state_mutability": "view"
              },
              {
                "name": "decimals",
                "type": "function",
                "inputs": [],
                "outputs": [
                  {
                    "type": "core::integer::u8"
                  }
                ],
                "state_mutability": "view"
              }
            ]
          },
          {
            "name": "constructor",
            "type": "constructor",
            "inputs": [
              {
                "name": "name",
                "type": "core::felt252"
              },
              {
                "name": "symbol",
                "type": "core::felt252"
              },
              {
                "name": "cdp_manager",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "is_collateral",
                "type": "core::bool"
              },
              {
                "name": "interest_rate_model",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "debt_token",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "key",
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "previous_owner",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "key",
                "name": "new_owner",
                "type": "core::starknet::contract_address::ContractAddress"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
            "type": "event",
            "variants": [
              {
                "kind": "nested",
                "name": "OwnershipTransferred",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred"
              },
              {
                "kind": "nested",
                "name": "OwnershipTransferStarted",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "nostra::shared::ownable_migration::TwoStepOwnableMigrationComponent::Event",
            "type": "event",
            "variants": []
          },
          {
            "kind": "struct",
            "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded",
            "type": "event",
            "members": [
              {
                "kind": "data",
                "name": "class_hash",
                "type": "core::starknet::class_hash::ClassHash"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event",
            "type": "event",
            "variants": [
              {
                "kind": "nested",
                "name": "Upgraded",
                "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Upgraded"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "from",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "key",
                "name": "to",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "data",
                "name": "value",
                "type": "core::integer::u256"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "openzeppelin::token::erc20::erc20::ERC20Component::Approval",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "owner",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "key",
                "name": "spender",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "data",
                "name": "value",
                "type": "core::integer::u256"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "openzeppelin::token::erc20::erc20::ERC20Component::Event",
            "type": "event",
            "variants": [
              {
                "kind": "nested",
                "name": "Transfer",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Transfer"
              },
              {
                "kind": "nested",
                "name": "Approval",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Approval"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Mint",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "data",
                "name": "amount",
                "type": "core::integer::u256"
              }
            ]
          },
          {
            "kind": "struct",
            "name": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Burn",
            "type": "event",
            "members": [
              {
                "kind": "key",
                "name": "user",
                "type": "core::starknet::contract_address::ContractAddress"
              },
              {
                "kind": "data",
                "name": "amount",
                "type": "core::integer::u256"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Event",
            "type": "event",
            "variants": [
              {
                "kind": "nested",
                "name": "Mint",
                "type": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Mint"
              },
              {
                "kind": "nested",
                "name": "Burn",
                "type": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Burn"
              }
            ]
          },
          {
            "kind": "enum",
            "name": "nostra::core::tokenization::lib::asset_token::AssetTokenComponent::Event",
            "type": "event",
            "variants": []
          },
          {
            "kind": "enum",
            "name": "nostra::core::tokenization::lib::scaled_token::ScaledTokenComponent::Event",
            "type": "event",
            "variants": []
          },
          {
            "kind": "enum",
            "name": "nostra::core::tokenization::lib::token_metadata::TokenMetadataComponent::Event",
            "type": "event",
            "variants": []
          },
          {
            "kind": "enum",
            "name": "nostra::lending::nostra_interest_token::NostraInterestToken::Event",
            "type": "event",
            "variants": [
              {
                "kind": "flat",
                "name": "OwnableEvent",
                "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event"
              },
              {
                "kind": "flat",
                "name": "OwnableMigrationEvent",
                "type": "nostra::shared::ownable_migration::TwoStepOwnableMigrationComponent::Event"
              },
              {
                "kind": "flat",
                "name": "UpgradeableEvent",
                "type": "openzeppelin::upgrades::upgradeable::UpgradeableComponent::Event"
              },
              {
                "kind": "flat",
                "name": "ERC20Event",
                "type": "openzeppelin::token::erc20::erc20::ERC20Component::Event"
              },
              {
                "kind": "flat",
                "name": "NostraTokenEvent",
                "type": "nostra::core::tokenization::lib::nostra_token::NostraTokenComponent::Event"
              },
              {
                "kind": "flat",
                "name": "AssetTokenEvent",
                "type": "nostra::core::tokenization::lib::asset_token::AssetTokenComponent::Event"
              },
              {
                "kind": "flat",
                "name": "ScaledTokenEvent",
                "type": "nostra::core::tokenization::lib::scaled_token::ScaledTokenComponent::Event"
              },
              {
                "kind": "flat",
                "name": "TokenMetadataEvent",
                "type": "nostra::core::tokenization::lib::token_metadata::TokenMetadataComponent::Event"
              }
            ]
          }
    ]
}